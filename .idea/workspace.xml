<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="51f249c3-7c5c-4e64-8561-ef9bd784f79c" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="feat/torch_as_strided" />
      </map>
    </option>
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2QpDDl0rg8yO8IbVYRObBadoU7o" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "settings.editor.selected.configurable": "PyConsoleConfigurable.Python Console",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="PyConsoleOptionsProvider">
    <option name="myPythonConsoleState">
      <console-settings module-name="ivy" is-module-sdk="true" working-directory="$PROJECT_DIR$">
        <option name="myUseModuleSdk" value="true" />
        <option name="myModuleName" value="ivy" />
        <option name="myWorkingDirectory" value="$PROJECT_DIR$" />
      </console-settings>
    </option>
  </component>
  <component name="RunManager" selected="Python tests.pytest in test_linalg.py">
    <configuration name="pytest in test_dropout_functions.py" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="docker://ivydl/ivy:latest/python3" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/ivy_tests/test_ivy/test_frontends/test_torch/test_dropout_functions.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest in test_dtype.py" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="docker://ivydl/ivy:latest/python3" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/ivy_tests/test_ivy/test_frontends/test_torch/test_dtype.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest in test_func_wrapper.py" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="/ivy" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/ivy_tests/test_ivy/test_frontends/test_torch/test_func_wrapper.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest in test_linalg.py" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/ivy_tests/test_ivy/test_frontends/test_torch/test_linalg.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest in test_utilities.py" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="ivy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="DockerContainerSettingsRunConfigurationExtension">
        <option name="envVars">
          <list />
        </option>
        <option name="extraHosts">
          <list />
        </option>
        <option name="links">
          <list />
        </option>
        <option name="networkDisabled" value="false" />
        <option name="networkMode" value="bridge" />
        <option name="portBindings">
          <list />
        </option>
        <option name="publishAllPorts" value="false" />
        <option name="runCliOptions" value="--entrypoint= --rm " />
        <option name="version" value="2" />
        <option name="volumeBindings">
          <list>
            <DockerVolumeBindingImpl>
              <option name="containerPath" value="/ivy" />
              <option name="editable" value="true" />
              <option name="hostPath" value="$PROJECT_DIR$" />
              <option name="readOnly" value="false" />
            </DockerVolumeBindingImpl>
          </list>
        </option>
      </EXTENSION>
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/ivy_tests/test_ivy/test_frontends/test_torch/test_utilities.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python tests.pytest for all (jax)" />
      <item itemvalue="Python tests.pytest for all (mxnet)" />
      <item itemvalue="Python tests.pytest for all (numpy)" />
      <item itemvalue="Python tests.pytest for all (tensorflow)" />
      <item itemvalue="Python tests.pytest for all (torch)" />
      <item itemvalue="Python tests.pytest for array API (jax)" />
      <item itemvalue="Python tests.pytest for array API (mxnet)" />
      <item itemvalue="Python tests.pytest for array API (numpy)" />
      <item itemvalue="Python tests.pytest for array API (tensorflow)" />
      <item itemvalue="Python tests.pytest for array API (torch)" />
      <item itemvalue="Python tests.pytest for core (jax)" />
      <item itemvalue="Python tests.pytest for core (mxnet)" />
      <item itemvalue="Python tests.pytest for core (numpy)" />
      <item itemvalue="Python tests.pytest for core (tensorflow)" />
      <item itemvalue="Python tests.pytest for core (torch)" />
      <item itemvalue="Python tests.pytest for frontends (jax)" />
      <item itemvalue="Python tests.pytest for frontends (mxnet)" />
      <item itemvalue="Python tests.pytest for frontends (numpy)" />
      <item itemvalue="Python tests.pytest for frontends (tensorflow)" />
      <item itemvalue="Python tests.pytest for frontends (torch)" />
      <item itemvalue="Python tests.pytest for nn (jax)" />
      <item itemvalue="Python tests.pytest for nn (mxnet)" />
      <item itemvalue="Python tests.pytest for nn (numpy)" />
      <item itemvalue="Python tests.pytest for nn (tensorflow)" />
      <item itemvalue="Python tests.pytest for nn (torch)" />
      <item itemvalue="Python tests.pytest for stateful (jax)" />
      <item itemvalue="Python tests.pytest for stateful (mxnet)" />
      <item itemvalue="Python tests.pytest for stateful (numpy)" />
      <item itemvalue="Python tests.pytest for stateful (tensorflow)" />
      <item itemvalue="Python tests.pytest for stateful (torch)" />
      <item itemvalue="Python tests.pytest for creation" />
      <item itemvalue="Python tests.pytest for data type" />
      <item itemvalue="Python tests.pytest for device" />
      <item itemvalue="Python tests.pytest for elementwise" />
      <item itemvalue="Python tests.pytest for general" />
      <item itemvalue="Python tests.pytest for gradients" />
      <item itemvalue="Python tests.pytest for linalg" />
      <item itemvalue="Python tests.pytest for manipulation" />
      <item itemvalue="Python tests.pytest for meta" />
      <item itemvalue="Python tests.pytest for nest" />
      <item itemvalue="Python tests.pytest for random" />
      <item itemvalue="Python tests.pytest for searching" />
      <item itemvalue="Python tests.pytest for set" />
      <item itemvalue="Python tests.pytest for sorting" />
      <item itemvalue="Python tests.pytest for statistical" />
      <item itemvalue="Python tests.pytest for utiliy" />
      <item itemvalue="Python tests.pytest for functional activations" />
      <item itemvalue="Python tests.pytest for functional layers" />
      <item itemvalue="Python tests.pytest for functional losses" />
      <item itemvalue="Python tests.pytest for functional norms" />
      <item itemvalue="Python tests.pytest for stateful activations" />
      <item itemvalue="Python tests.pytest for stateful api" />
      <item itemvalue="Python tests.pytest for stateful converters" />
      <item itemvalue="Python tests.pytest for stateful layers" />
      <item itemvalue="Python tests.pytest for stateful modules" />
      <item itemvalue="Python tests.pytest for stateful norms" />
      <item itemvalue="Python tests.pytest for stateful optimizers" />
      <item itemvalue="Python tests.pytest for all" />
      <item itemvalue="Python tests.pytest for array API" />
      <item itemvalue="Python tests.pytest for container" />
      <item itemvalue="Python tests.pytest for demos" />
      <item itemvalue="Python tests.pytest for functioanl nn" />
      <item itemvalue="Python tests.pytest for functional core" />
      <item itemvalue="Python tests.pytest for functional frontends" />
      <item itemvalue="Python tests.pytest for graph compilation" />
      <item itemvalue="Python tests.pytest for stateful" />
      <item itemvalue="Python tests.pytest in test_tensor.py" />
      <item itemvalue="Python tests.pytest in test_tensorflow" />
      <item itemvalue="Python tests.pytest in test_linalg.py" />
      <item itemvalue="Python tests.pytest in test_utilities.py" />
      <item itemvalue="Python tests.pytest in test_dropout_functions.py" />
      <item itemvalue="Python tests.pytest in test_dtype.py" />
      <item itemvalue="Python tests.pytest in test_func_wrapper.py" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.pytest in test_linalg.py" />
        <item itemvalue="Python tests.pytest in test_utilities.py" />
        <item itemvalue="Python tests.pytest in test_func_wrapper.py" />
        <item itemvalue="Python tests.pytest in test_dropout_functions.py" />
        <item itemvalue="Python tests.pytest in test_dtype.py" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="51f249c3-7c5c-4e64-8561-ef9bd784f79c" name="Changes" comment="" />
      <created>1685568813372</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1685568813372</updated>
      <workItem from="1685568815308" duration="5096000" />
      <workItem from="1686041515252" duration="3359000" />
      <workItem from="1686048409512" duration="8207000" />
      <workItem from="1686076674249" duration="11924000" />
      <workItem from="1686158557317" duration="4563000" />
      <workItem from="1686483232908" duration="3397000" />
      <workItem from="1686645281591" duration="531000" />
      <workItem from="1686731545722" duration="1028000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/ivy$pytest_in_test_tensor_py.coverage" NAME="pytest in test_tensor.py Coverage Results" MODIFIED="1686061567040" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ivy$pytest_in_test_torch.coverage" NAME="pytest in test_torch Coverage Results" MODIFIED="1686060809348" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/ivy_tests" />
    <SUITE FILE_PATH="coverage/ivy$pytest.coverage" NAME="pytest Coverage Results" MODIFIED="1686078749953" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ivy$pytest_in_test_utilities_py.coverage" NAME="pytest in test_utilities.py Coverage Results" MODIFIED="1686732082380" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ivy$pytest_in_test_linalg_py.coverage" NAME="pytest in test_linalg.py Coverage Results" MODIFIED="1686732331059" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/ivy$install_optional.coverage" NAME="install_optional Coverage Results" MODIFIED="1686484776984" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>